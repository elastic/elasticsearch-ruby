[[ruby_client]]
== Overview

The `elasticsearch` http://rubygems.org/gems/elasticsearch[Rubygem] provides a 
low-level client for communicating with an {es} cluster, fully compatible with 
other official clients.

Full documentation is hosted at 
https://github.com/elastic/elasticsearch-ruby[Github] and 
http://rubydoc.info/gems/elasticsearch[RubyDoc]. This documentation provides 
only an overview of features.


[discrete]
=== {es} and Ruby Version Compatibility

The {es} client is compatible with Ruby 1.9 and higher.

The client's API is compatible with {es} API versions from 0.90 till current,
just use a release matching major version of {es}.

|===
| Gem Version   |   | {es} Version

| 0.90          | → | 0.90
| 1.x           | → | 1.x
| 2.x           | → | 2.x
| 5.x           | → | 5.x
| 6.x           | → | 6.x
| 7.x           | → | 7.x
| master        | → | master
|===


[discrete]
=== Example Usage

[source,ruby]
------------------------------------
require 'elasticsearch'
client = Elasticsearch::Client.new log: true
client.cluster.health
client.index index: 'my-index', type: 'my-document', id: 1, body: { title: 'Test' }
client.indices.refresh index: 'my-index'
client.search index: 'my-index', body: { query: { match: { title: 'test' } } }
------------------------------------


[discrete]
=== Features

* Pluggable logging and tracing
* Pluggable connection selection strategies (round-robin, random, custom)
* Pluggable transport implementation, customizable and extendable
* Pluggable serializer implementation
* Request retries and dead connections handling
* Node reloading (based on cluster state) on errors or on demand
* Modular API implementation
* 100% REST API coverage


[discrete]
[[transport-api]]
=== Transport and API

The `elasticsearch` gem combines two separate Rubygems:

* https://github.com/elastic/elasticsearch-ruby/tree/master/elasticsearch-transport[`elasticsearch-transport`]
provides an HTTP Ruby client for connecting to the {es} cluster,

* https://github.com/elastic/elasticsearch-ruby/tree/master/elasticsearch-api[`elasticsearch-api`]
provides a Ruby API for the {es} RESTful API.

Please consult their respective documentation for configuration options and 
technical details.

Notably, the documentation and comprehensive examples for all the API methods 
are contained in the source, and available online at 
http://rubydoc.info/gems/elasticsearch-api/Elasticsearch/API/Actions[Rubydoc].

Keep in mind, that for optimal performance, you should use an HTTP library which 
supports persistent ("keep-alive") HTTP connections.


[discrete]
[[extensions]]
=== Extensions

The 
https://github.com/elastic/elasticsearch-ruby/tree/master/elasticsearch-extensions[`elasticsearch-extensions`]
Rubygem provides a number of extensions to the core client, such as an API to 
programmatically launch {es} clusters (for example, for testing purposes), and 
more.

Consult the 
https://github.com/elastic/elasticsearch-ruby/tree/master/elasticsearch-extensions[documentation]
for more information.