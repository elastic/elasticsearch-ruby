#!/usr/bin/env bash

#
# Runs the client tests via Docker with the expectation that the required
# environment variables have already been exported before running this script.
#
# The required environment variables include:
#
#   - $ELASTICSEARCH_VERSION
#   - $RUBY_TEST_VERSION
#   - $TEST_SUITE
#

export RUBY_TEST_VERSION=${RUBY_TEST_VERSION:-2.6.1}
export ELASTICSEARCH_VERSION=${ELASTICSEARCH_VERSION:-6.7.0}

set -eo pipefail

set +x
export VAULT_TOKEN=$(vault write -field=token auth/approle/login role_id="$VAULT_ROLE_ID" secret_id="$VAULT_SECRET_ID")
export CODECOV_TOKEN=$(vault read -field=token secret/clients-ci/elasticsearch-ruby/codecov)
unset VAULT_ROLE_ID VAULT_SECRET_ID VAULT_TOKEN
set -x

function cleanup {
  docker container rm --force --volumes elasticsearch > /dev/null 2>&1 || true
  docker container rm --force --volumes elasticsearch-2 > /dev/null 2>&1 || true
  docker container rm --force --volumes elasticsearch-ruby > /dev/null 2>&1 || true
  docker network rm esnet > /dev/null
}

trap cleanup EXIT

# create network and volume
docker network create esnet

# create client image
docker build \
  --file .ci/Dockerfile \
  --tag elastic/elasticsearch-ruby \
  --build-arg RUBY_TEST_VERSION=${RUBY_TEST_VERSION} \
  .


# run elasticsearch
repo=$(pwd)
testnodecrt="/.ci/certs/testnode.crt"
testnodekey="/.ci/certs/testnode.key"
cacrt="/.ci/certs/ca.crt"

docker run \
  --rm \
  --env "node.attr.testattr=test" \
  --env "path.repo=/tmp" \
  --env "repositories.url.allowed_urls=http://snapshot.*" \
  --env "discovery.type=single-node" \
  --env "ES_JAVA_OPTS=-Xms1g -Xmx1g" \
  --env "ELASTIC_PASSWORD=changeme" \
  --env "xpack.security.enabled=true" \
  --env "xpack.license.self_generated.type=trial" \
  --env "xpack.security.http.ssl.enabled=true" \
  --env "xpack.security.http.ssl.verification_mode=certificate" \
  --env "xpack.security.http.ssl.key=certs/testnode.key" \
  --env "xpack.security.http.ssl.certificate=certs/testnode.crt" \
  --env "xpack.security.http.ssl.certificate_authorities=certs/ca.crt" \
  --env "xpack.security.transport.ssl.enabled=true" \
  --env "xpack.security.transport.ssl.key=certs/testnode.key" \
  --env "xpack.security.transport.ssl.certificate=certs/testnode.crt" \
  --env "xpack.security.transport.ssl.certificate_authorities=certs/ca.crt" \
  --volume "$repo$testnodecrt:/usr/share/elasticsearch/config/certs/testnode.crt" \
  --volume "$repo$testnodekey:/usr/share/elasticsearch/config/certs/testnode.key" \
  --volume "$repo$cacrt:/usr/share/elasticsearch/config/certs/ca.crt" \
  --network=esnet \
  --name=elasticsearch \
  --detach \
  docker.elastic.co/elasticsearch/elasticsearch:${ELASTICSEARCH_VERSION}


# run the client tests
docker run \
  --network=esnet \
  --env "TEST_ES_SERVER=http://elasticsearch:9200" \
  --env "ELASTIC_PASSWORD=changeme" \
  --env "ELASTIC_USER=elastic" \
  --env "CODECOV_TOKEN" \
  --volume $repo:/usr/src/app \
  --name elasticsearch-ruby \
  --rm \
  elastic/elasticsearch-ruby \
  bundle exec rake test:security
